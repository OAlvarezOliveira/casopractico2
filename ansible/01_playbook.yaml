---
- name: Configuraci√≥n del servidor Apache
  hosts: podman_vm
  become: yes
  become_user: root
  tasks:
    - name: Tarea 8 - Crear archivo index.html
      ansible.builtin.copy:
        content: |
          <!DOCTYPE html>
          <html>
          <head>
              <title>Bienvenido al servidor web</title>
              <style>
                  body {
                      font-family: Arial, sans-serif;
                      padding: 20px;
                      max-width: 600px;
                      margin: 0 auto;
                  }
                  h1 {
                      color: #333;
                  }
                  p {
                      line-height: 1.5;
                  }
                  ul {
                      list-style-type: disc;
                      padding-left: 20px;
                  }
              </style>
          </head>
          <body>
              <h1>Bienvenido al servidor web</h1>
              <p>Este servidor web ha sido configurado con Podman y Ansible.</p>
              <p>A continuacion se muestran algunas caracteristicas del servidor:</p>
              <ul>
                  <li>Se ha instalado y configurado el servidor web Apache HTTP Server (httpd).</li>
                  <li>El servidor web utiliza un certificado autofirmado para conexiones seguras (HTTPS).</li>
                  <li>Se ha configurado la autenticacion basica para proteger el acceso al servidor web.</li>
                  <li>Se ha generado una imagen del contenedor con todas las configuraciones que corre sobre Podman y se ha subido al registro de contenedores de Azure.</li>
                  <li>El contenedor del servicio web se gestiona a traves de systemd para automatizar su puesta en marcha en caso de fallo o reinicio.</li>
              </ul>
              <p>Este servidor es parte del casopractico2 que estoy desarrollando para Unir</p>
          </body>
          </html>
        dest: /webserver/index.html
        owner: root
        group: root
        mode: '0644'
      become: true

    - name: Tarea 9 - Crear archivo httpd.conf
      ansible.builtin.copy:
        content: |
          ServerRoot "/usr/local/apache2"
          Listen 443

          LoadModule mpm_event_module modules/mod_mpm_event.so
          LoadModule authn_file_module modules/mod_authn_file.so
          LoadModule authn_core_module modules/mod_authn_core.so
          LoadModule authz_host_module modules/mod_authz_host.so
          LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
          LoadModule authz_user_module modules/mod_authz_user.so
          LoadModule authz_core_module modules/mod_authz_core.so
          LoadModule access_compat_module modules/mod_access_compat.so
          LoadModule auth_basic_module modules/mod_auth_basic.so
          LoadModule reqtimeout_module modules/mod_reqtimeout.so
          LoadModule filter_module modules/mod_filter.so
          LoadModule mime_module modules/mod_mime.so
          LoadModule log_config_module modules/mod_log_config.so
          LoadModule env_module modules/mod_env.so
          LoadModule headers_module modules/mod_headers.so
          LoadModule setenvif_module modules/mod_setenvif.so
          LoadModule version_module modules/mod_version.so
          LoadModule unixd_module modules/mod_unixd.so
          LoadModule status_module modules/mod_status.so
          LoadModule autoindex_module modules/mod_autoindex.so
          LoadModule ssl_module modules/mod_ssl.so

          <IfModule !mpm_prefork_module>
            #LoadModule cgid_module modules/mod_cgid.so
          </IfModule>
          <IfModule mpm_prefork_module>
            #LoadModule cgi_module modules/mod_cgi.so
          </IfModule>
          LoadModule dir_module modules/mod_dir.so
          LoadModule alias_module modules/mod_alias.so

          <IfModule unixd_module>
            User www-data
            Group www-data
          </IfModule>

          ServerAdmin you@example.com
          ServerName localhost
          SSLEngine on
          SSLCertificateFile "/usr/local/apache2/localhost.crt"
          SSLCertificateKeyFile "/usr/local/apache2/localhost.key"

          <Directory />
            AllowOverride none
            Require all denied
          </Directory>

          DocumentRoot "/usr/local/apache2/htdocs"
          <Directory "/usr/local/apache2/htdocs">
            Options Indexes FollowSymLinks
            AllowOverride All
            Require all granted
          </Directory>

          <IfModule dir_module>
            DirectoryIndex index.html
          </IfModule>

          <Files ".ht*">
            Require all denied
          </Files>

          ErrorLog /proc/self/fd/2

          LogLevel warn

          <IfModule log_config_module>
            LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
            LogFormat "%h %l %u %t \"%r\" %>s %b" common
            <IfModule logio_module>
              LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
            </IfModule>
            CustomLog /proc/self/fd/1 common
          </IfModule>

          <IfModule alias_module>
            ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
          </IfModule>

          <IfModule cgid_module>
          </IfModule>

          <Directory "/usr/local/apache2/cgi-bin">
            AllowOverride None
            Options None
            Require all granted
          </Directory>

          <IfModule headers_module>
            RequestHeader unset Proxy early
          </IfModule>

          <IfModule mime_module>
            TypesConfig conf/mime.types
            AddType application/x-compress .Z
            AddType application/x-gzip .gz .tgz
          </IfModule>

          <IfModule proxy_html_module>
            Include conf/extra/proxy-html.conf
          </IfModule>

          <IfModule ssl_module>
            SSLRandomSeed startup builtin
            SSLRandomSeed connect builtin
          </IfModule>
        dest: /webserver/httpd.conf
        owner: root
        group: root
        mode: '0644'
      become: true

    - name: Tarea 9 - Crear archivo .htaccess
      ansible.builtin.copy:
        content: |
          AuthType Basic
          AuthName "Restricted Content"
          AuthUserFile /usr/local/apache2/.cred
          Require valid-user
        dest: /webserver/.htaccess
        owner: root
        group: root
        mode: '0644'
      become: true

    - name: Tarea 10 - Crear archivo Containerfile
      ansible.builtin.copy:
        content: |
          FROM docker.io/httpd:latest
          COPY index.html /usr/local/apache2/htdocs/
          COPY .htaccess /usr/local/apache2/htdocs/
          COPY httpd.conf /usr/local/apache2/conf/
          COPY .cred /usr/local/apache2/
          COPY localhost.key /usr/local/apache2/
          COPY localhost.crt /usr/local/apache2/
        dest: /webserver/Containerfile
        owner: root
        group: root
        mode: '0644'
      become: true

