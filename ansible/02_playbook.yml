- name: Puesta en marcha del servidor contenerizado
  hosts: podman_vm
  become: yes
  become_user: root
  tasks:
    - name: Tarea 12 - Generar imagen del contenedor
      ansible.builtin.command:
        cmd: podman build -t webserver -f /webserver/Containerfile /webserver
      become: true
      become_user: root

    - name: Tarea 13 - Generar imagen del contenedor
      containers.podman.podman_tag:
        image: localhost/webserver:latest
        target_names: "{{ registry_acr }}/webserver:casopractico2"
      become: true
      become_user: root

    - name: Tarea 14 - Iniciar sesión en el registro de contenedores
      containers.podman.podman_login:
        registry: "{{ registry_acr }}"
        username: "{{ registry_username }}"
        password: "{{ registry_password }}"
      become: true
      become_user: root

    - name: Tarea 15 - Subir imagen del contenedor al registro
      containers.podman.podman_image:
        name: "{{ registry_acr }}/webserver:casopractico2"
        push: yes
      become: true
      become_user: root

    - name: Tarea 16 - Crear contenedor
      containers.podman.podman_container:
        name: web
        image: "{{ registry_acr }}/webserver:casopractico2"
        ports:
          - "8080:443"
      become: true
      become_user: root

    - name: Tarea 17 - Generar los ficheros para gestionar el contenedor a través de systemd
      ansible.builtin.command:
        cmd: podman generate systemd --new --files --name web
      become: true
      become_user: root

    - name: Tarea 18 - Copiar los ficheros generados en el paso previo al directorio de systemd
      ansible.builtin.command:
        cmd: cp -Z container-web.service /etc/systemd/system/
      become: true
      become_user: root

    - name: Tarea 19 - Recargar configuración de systemd
      ansible.builtin.systemd:
        daemon_reload: yes
      become: true
      become_user: root

    - name: Tarea 20 - Habilitar y activar servicio de contenedor
      ansible.builtin.systemd:
        name: container-web.service
        enabled: yes
        state: started
      become: true
      become_user: root
    
    - name: Tarea 21 - Eliminar imágenes locales creadas
      containers.podman.podman_image:
        name: "{{ item }}"
        state: absent
      with_items:
        - webserver:casopractico2
      become: true
      become_user: root

    - name: Tarea 22 - Eliminar archivos utilizados para la creación de la imagen
      ansible.builtin.file:
        path: "/webserver"
        state: absent
      become: true
      become_user: root
  